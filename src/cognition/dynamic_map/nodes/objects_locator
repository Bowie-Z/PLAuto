#!/usr/bin/env python
import os
import rospy
from plauto_common.params import parse_private_args

from objects_locator import NearestLocator
from plauto_nav_msgs.msg import RigidBodyStateStamped,Map
from plauto_cognition_msgs.msg import MapState
from plauto_perception_msgs.msg import DetectionBoxArray, TrackingBoxArray

class LocatorNode(object):
    def __init__(self):

        params = parse_private_args(
            objects_topic = "/plauto/perception/objects_truth",
            map_input_topic="/plauto/navigation/local_static_map",
            map_output_topic="local_dynamic_map/map_with_objects",
            pose_topic = "/plauto/navigation/ego_pose",
            traffic_light_topic = "/plauto/perception/traffic_lights",
            hz=20,
        )

        self._map_instance = NearestLocator()
        self._rate = rospy.Rate(params.hz)

        self._pose_subscriber = rospy.Subscriber(params.pose_topic, RigidBodyStateStamped, self._map_instance.receive_ego_state)
        self._surrounding_vehicle_subscriber = rospy.Subscriber(params.objects_topic, TrackingBoxArray, self._map_instance.receive_object_list)
        self._static_map_subscriber = rospy.Subscriber(params.map_input_topic, Map, self._map_instance.receive_static_map)
        self._dynamic_map_publisher = rospy.Publisher(params.map_output_topic, MapState, queue_size=1)
        self._traffic_light_subscriber = rospy.Subscriber(params.traffic_light_topic, DetectionBoxArray,
            self._map_instance.receive_traffic_light_detection)

    def loop(self):
        while not rospy.is_shutdown():
            self._rate.sleep() # TODO(zyxin): remove sleep after ensure the following modules are good
            dmap = self._map_instance.update()
            
            if dmap: self._dynamic_map_publisher.publish(dmap)

if __name__ == "__main__":

    rospy.init_node("nearest_locator", log_level=rospy.DEBUG)
    
    node = LocatorNode()
    node.loop()